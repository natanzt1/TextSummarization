Perspektif pengembang

Aplikasi monolitik besar biasanya memiliki basis kode aplikasi yang besar, yang sering kali mengintimidasi para pengembang. Ketika pengembang baru bergabung dengan tim proyek besar, sejumlah besar waktu diperlukan untuk menjadi terbiasa dengan basis kode. Pengembang ragu untuk membuat peningkatan aplikasi karena takut merusak sesuatu yang lain karena beberapa dependensi yang tidak diketahui.
Tidak selalu intuitif bagian mana dari kode aplikasi yang perlu dimodifikasi untuk permintaan fitur tertentu atau permintaan perubahan. Ini mengarah ke kurva belajar yang lebih besar untuk pengembang onboarding, meningkatkan waktu pengiriman proyek, dan mengurangi tingkat peningkatan dan pengiriman kemampuan baru.
Basis kode besar juga dapat menyebabkan lingkungan pengembangan terintegrasi (IDE) pengembang berkinerja buruk, atau dalam beberapa kasus hanya crash. Dalam kasus di mana layanan sedang dikembangkan di cloud, itu juga berarti waktu dorong penyebaran yang lebih lama. Ini dapat meningkatkan perjalanan pulang-pergi dari siklus pengembangan untuk pengembang untuk mendapatkan umpan balik tentang perubahan kode mereka. Aplikasi politik juga dapat memerlukan ulasan kode rekan lebih lama. Umur untuk aplikasi monolitik cenderung lebih lama daripada untuk layanan mikro, sehingga kemungkinan akan ada lebih banyak pengembang bergabung dan pergi, menghasilkan biaya dukungan yang lebih tinggi. Situasi ini juga menyebabkan praktik dan gaya pengkodean yang tidak konsisten serta metode dokumentasi yang tidak konsisten. Semua elemen ini membuat pemeliharaan dan tinjauan kode lebih memakan waktu dan sulit.
Aplikasi microservice memungkinkan pengembang untuk lebih mudah memecah pekerjaan mereka menjadi tim independen yang lebih kecil, dan untuk mengintegrasikan pekerjaan itu saat disampaikan dan diintegrasikan.
